from luo_labyrintti import Labyrintti
from collections import deque

class Tremaux:
    def __init__(self):
        self.labyrintti = Labyrintti.labyrintti
        self.korkeus = len(self.labyrintti)
        self.leveys = len(self.labyrintti[0])
        
        self.aloituskorkeus, self.aloitusleveys = self.aloituskohta()


    def aloituskohta(self):
        """Tässä metodissa etsitään labyrintin ensimmäiseltä riviltä aloituskohta"""
        for i in range(0, self.leveys):
            if self.labyrintti[0][i] == ".":
                alkukorkeus, alkuleveys = 0, i
        
        return alkukorkeus, alkuleveys




if __name__ == "__main__":
    labyrintti = [
        ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '.', '#', '#'],
        ['#', '.', '#', '.', '#', '#', '.', '#', '.', '.', '#', '#', '.', '.', '#'],
        ['#', '.', '#', '.', '#', '.', '.', '.', '.', '#', '#', '.', '.', '#', '#'],
        ['#', '.', '#', '.', '#', '#', '#', '#', '.', '#', '.', '.', '#', '#', '#'],
        ['#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '#'],
        ['#', '#', '#', '#', '#', '#', '#', '.', '#', '.', '#', '#', '.', '#', '#'],
        ['#', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '#'],
        ['#', '#', '.', '#', '#', '.', '#', '.', '#', '.', '#', '#', '#', '#', '#'],
        ['#', '#', '#', '#', '#', '#', '#', '.', '#', '.', '.', '.', '.', '.', '#'],
        ['#', '.', '#', '.', '#', '#', '#', '.', '#', '#', '#', '#', '.', '#', '#'],
        ['#', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '.', '.', '.', '#'],
        ['#', '.', '#', '.', '#', '.', '#', '#', '.', '#', '#', '.', '#', '.', '#'],
        ['#', '.', '#', '.', '#', '.', '.', '#', '.', '.', '#', '#', '#', '.', '#'],
        ['#', '.', '#', '.', '#', '.', '#', '#', '.', '#', '#', '.', '.', '.', '#'],
        ['#', '.', '#', '.', '#', '.', '#', '#', '.', '#', '#', '.', '.', '.', '#']
        ]
    
    laby = Tremaux(labyrintti)
